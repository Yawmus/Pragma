package com.peter.server.entities;

import com.peter.server.Global;
import com.peter.server.PragmaServer;
import com.peter.server.inventory.Chest;
import com.peter.server.inventory.Food;
import com.peter.server.inventory.Wearable;

public class EntityManager{
	
    private int randX, randY;
    
    
    public EntityManager(){ 
    }
    
    public void init(PlayerPacket player){
		
		PragmaServer.map.chests.add(new Chest());
		PragmaServer.map.chests.get(PragmaServer.map.chests.size()-1).setPosition(4, 4);

		PragmaServer.map.chests.add(new Chest());
		PragmaServer.map.chests.get(PragmaServer.map.chests.size()-1).setPosition(6, 4);

		PragmaServer.map.items.add(new Food(Food.BREAD));
		PragmaServer.map.items.get(PragmaServer.map.items.size()-1).setPosition(8, 32);
		
		PragmaServer.map.items.add(new Wearable(Wearable.HAT));
		PragmaServer.map.items.get(PragmaServer.map.items.size()-1).setPosition(9, 32);
		
		PragmaServer.map.items.add(new Wearable(Wearable.HAT));
		PragmaServer.map.items.get(PragmaServer.map.items.size()-1).setPosition(9, 31);
		
		PragmaServer.map.items.add(new Wearable(Wearable.RING));
		PragmaServer.map.items.get(PragmaServer.map.items.size()-1).setPosition(9, 34);
		
		for(int i=0; i<PragmaServer.map.getData().getCitizens(); i++){
			randX = Global.rand(13, 3);
			randY = Global.rand(7, 3);
			PragmaServer.map.npcs.add(new Citizen("c_.png"));
			PragmaServer.map.npcs.get(PragmaServer.map.npcs.size()-1).setPosition(randX, randY);
		}
		
		randX = Global.rand(13, 3);
		randY = Global.rand(7, 3);
		PragmaServer.map.npcs.add(Shopkeep.Bartender);
		PragmaServer.map.npcs.get(PragmaServer.map.npcs.size()-1).setPosition(randX, randY);
		
		randX = Global.rand(13, 3);
		randY = Global.rand(7, 3);
		PragmaServer.map.npcs.add(Shopkeep.Shopkeep);
		PragmaServer.map.npcs.get(PragmaServer.map.npcs.size()-1).setPosition(randX, randY);
			
    	for(int i=0; i<PragmaServer.map.getData().getMonsters(); i++){
			randX = Global.rand(13, 3);
			randY = Global.rand(7, 3);
			PragmaServer.map.npcs.add(new Worm("tilda.png"));
			PragmaServer.map.npcs.get(PragmaServer.map.npcs.size()-1).setPosition(randX, randY);
    	}
	}
    
    public void dispose(){
		Global.mapShapes.dispose();
		Global.screenShapes.dispose();
		Global.gothicFont.dispose();
		Global.font.dispose();
    }
}
