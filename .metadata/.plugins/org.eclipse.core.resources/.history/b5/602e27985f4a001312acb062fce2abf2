package com.peter.rogue.entities;

import java.util.ArrayList;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Buttons;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector2;
import com.peter.rogue.Global;
import com.peter.rogue.inventory.Food;
import com.peter.rogue.inventory.Item;

public class Shopkeep extends NPC{

	private ArrayList<Item> items;
	private ArrayList<Rectangle> collisions;
	private Texture model = new Texture("img/model.png");
	private Item hover;
	
	public static final int HEIGHT = 300, WIDTH = 350;
	public static final int ORIGIN_X = 250, ORIGIN_Y = 250;
	
	public Shopkeep(String filename) {
		super(filename, "Shopkeep");
		
		this.items = new ArrayList<Item>();
		this.collisions = new ArrayList<Rectangle>();
		stats.setLevel(1);
		stats.setHitpoints(10);
		stats.setDexterity(5);
		stats.setStrength(1);
		stats.setExperience(100);
		
		add(Food.MEAT);
	}
	
	public void update(float delta){
		super.update(delta);
	}

	public void add(Item item){
		item.pickedUp(true);
		items.add(item);
		collisions.add(new Rectangle(0, 0, 150, 15));
	}
	
	public void display(SpriteBatch spriteBatch, BitmapFont font, Vector2 screenCoord){
		Global.screenShapes.begin(ShapeType.Filled);
		Global.screenShapes.setColor(0f, 0f, 0f, 1f);
		Global.screenShapes.rect(ORIGIN_X, ORIGIN_Y, WIDTH, HEIGHT);
		Global.screenShapes.end();

		Global.screenShapes.begin(ShapeType.Filled);
		Global.screenShapes.setColor(0.03f, 0.03f, 0.03f, 1f);
		Global.screenShapes.rect(ORIGIN_X + 5, ORIGIN_Y + 5, WIDTH/2 - 15, HEIGHT - 10);
		Global.screenShapes.end();
		
		Global.screenShapes.begin(ShapeType.Line);
		Global.screenShapes.setColor(Color.DARK_GRAY);
		Global.screenShapes.rect(ORIGIN_X, ORIGIN_Y, WIDTH, HEIGHT);
		Global.screenShapes.line(ORIGIN_X + 170, ORIGIN_Y + 100, ORIGIN_X + WIDTH, ORIGIN_Y + 100);
		Global.screenShapes.line(ORIGIN_X + 170, ORIGIN_Y, ORIGIN_X + 170, HEIGHT + 250);
		Global.screenShapes.end();

		spriteBatch.begin();
		
		for(int i=0; i<items.size(); i++){
			font.draw(spriteBatch, items.get(i).getName(), ORIGIN_X + 10, (ORIGIN_Y + HEIGHT - 10) - i*15);
			collisions.get(i).setPosition(ORIGIN_X + 10, (ORIGIN_Y + HEIGHT - 24) - i*15);
		}
		if(hover != null){
			spriteBatch.draw(hover.getTexture(), ORIGIN_X + 210, ORIGIN_Y + 50);
			font.draw(spriteBatch, hover.getName(), ORIGIN_X + 250, ORIGIN_Y + 70);
			font.draw(spriteBatch, "Value: " + hover.getValue(), ORIGIN_X + 190, ORIGIN_Y + 30);
			font.draw(spriteBatch, "Weight: " + hover.getWeight(), ORIGIN_X + 265, ORIGIN_Y + 30);
			hover = null;
		}
		spriteBatch.end();
		
		
		
		
		// Item-mouse collision
		Gdx.gl.glEnable(GL10.GL_BLEND);
        Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
		Global.screenShapes.begin(ShapeType.Filled);
		Global.screenShapes.setColor(0f, 1f, 1f, .4f);

		for(int i=0; i<getItems().size(); i++){
			Global.screenShapes.rect(getCollision().get(i).x, getCollision().get(i).y, 150, 15);
			if(getCollision().get(i).contains(screenCoord)){
				if(Gdx.input.isButtonPressed(Buttons.RIGHT))
					System.out.println("Hello");
				else if(Gdx.input.isButtonPressed(Buttons.LEFT) && Gdx.input.justTouched()){
					getItems().remove(i);
					getCollision().remove(i);
				}
				else{
					setItem(getItems().get(i));
				}
			}
		}
		Global.screenShapes.end();
	    Gdx.gl.glDisable(GL10.GL_BLEND);
	}
	
	public ArrayList<Rectangle> getCollision() {
		return collisions;
	}
	public void setCollisions(ArrayList<Rectangle> collisions) {
		this.collisions = collisions;
	}
	
	public boolean isItem(){
		if(hover == null)
			return false;
		return true;
	}
	public void setItem(Item item){
		this.hover = item;
	}
	
	public ArrayList<Item> getItems(){
		return items;
	}
}
