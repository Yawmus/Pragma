package com.peter.rogue.inventory;

import java.util.LinkedList;

import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.peter.rogue.Global;

public class Inventory {
	
	private Backpack backpack = new Backpack();
	private LinkedList<Item> items;
	private int weight;
	public static final int HEIGHT = 200, WIDTH = 300;
	
	public Inventory(){
		backpack = Backpack.SMALL;
		items = new LinkedList<Item>();
	}
	
	public void add(Item item){
		if(item.getWeight() + weight <= backpack.getCapacity()){
			item.pickedUp(true);
			items.add(item);
		}
	}
	public void display(SpriteBatch spriteBatch, BitmapFont font){
		shapeRenderer.begin(ShapeType.Filled);
		shapeRenderer.setColor(0f, 0f, 0f, 1f);
		shapeRenderer.rect(Global.SCREEN_WIDTH/2 + 50, Global.SCREEN_HEIGHT/3, Inventory.HEIGHT, Inventory.WIDTH);
		shapeRenderer.end();
		shapeRenderer.begin(ShapeType.Line);
		shapeRenderer.setColor(.3f, .84f, 0, 1f);
		shapeRenderer.rect(Global.SCREEN_WIDTH/2 + 50, Global.SCREEN_HEIGHT/3, Inventory.HEIGHT, Inventory.WIDTH);
		shapeRenderer.end();
		
		for(int i=0; i<items.size(); i++){
			font.draw(spriteBatch, items.get(i).getName(),  Global.camera.position.x + 80, (Global.camera.position.y + WIDTH/2) - i * 15);
		}
	}
	public Texture getBackpack(){
		return backpack.getTexture();
	}
}