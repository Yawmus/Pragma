package com.peter.server.views;

import java.util.ArrayList;
import java.util.HashMap;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.math.Vector3;
import com.peter.server.Global;
import com.peter.server.entities.Entity;
import com.peter.server.entities.NPC;
import com.peter.server.entities.PlayerPacket;
import com.peter.server.entities.Shopkeep;
import com.peter.server.inventory.Chest;
import com.peter.server.map.Map;

public class UI{
    public static HashMap<Vector3, Entity> screenMarks;
    private Vector2 screenCoord;
    
	public UI(PlayerPacket player){
		screenMarks = new HashMap<Vector3, Entity>();
	}
	
	public void draw(PlayerPacket player, ArrayList<NPC> npcs){
		// Draws the messages and statuses on top of everything
		for(int i=0; i<npcs.size(); i++){
			if(npcs.get(i).canDraw){
				if(npcs.get(i).messageFlag){
					Global.mapShapes.begin(ShapeType.Filled);
					Global.mapShapes.setColor(0, 0f, 0, 1f);
					Global.mapShapes.rect(npcs.get(i).getX(), npcs.get(i).getY() - 17, Global.font.getBounds(npcs.get(i).getMessage()).width, Global.font.getLineHeight());
					Global.mapShapes.end();
				}
				if(npcs.get(i).statusFlag){
					Global.mapShapes.begin(ShapeType.Filled);
					if(npcs.get(i).getStatus() == 0)
						Global.mapShapes.setColor(0f, 0f, .6f, 1f);
					else if(npcs.get(i).getStatus() < 0)
						Global.mapShapes.setColor(.4f, 0f, 0f, 1f);
					else if(npcs.get(i).getStatus() > 0)
						Global.mapShapes.setColor(0f, .4f, 0f, 1f);
					Global.mapShapes.circle(npcs.get(i).getX(), npcs.get(i).getY() + 20, 13);
					Global.mapShapes.end();
					Global.mapShapes.begin(ShapeType.Line);
					Global.mapShapes.setColor(0f, 0f, 0f, 1f);
					Global.mapShapes.circle(npcs.get(i).getX(), npcs.get(i).getY() + 20, 13);
					Global.mapShapes.end();
				}
				Entity.map.getSpriteBatch().begin();
				Global.font.draw(Entity.map.getSpriteBatch(), npcs.get(i).getMessage(), npcs.get(i).getX(), npcs.get(i).getY());
				if(npcs.get(i).getStatus() != null)
					if(Math.abs(npcs.get(i).getStatus()) < 10)
						Global.font.draw(Entity.map.getSpriteBatch(), ((Integer)(Math.abs(npcs.get(i).getStatus()))).toString(), npcs.get(i).getX() - 4, npcs.get(i).getY() + 26);
					else
						Global.font.draw(Entity.map.getSpriteBatch(), ((Integer)(Math.abs(npcs.get(i).getStatus()))).toString(), npcs.get(i).getX() - 7, npcs.get(i).getY() + 26);
				Entity.map.getSpriteBatch().end();
			}
		}
		
		if(player.messageFlag){
			Global.mapShapes.begin(ShapeType.Filled);
			Global.mapShapes.setColor(0, 0, 0, 1f);
			Global.mapShapes.rect(player.getX(), player.getY() - 17, Global.font.getBounds(player.getMessage()).width, Global.font.getLineHeight());
			Global.mapShapes.end();
		}
		if(player.statusFlag){
			Global.mapShapes.begin(ShapeType.Filled);
			if(player.getStatus() == 0)
				Global.mapShapes.setColor(0f, 0f, .6f, 1f);
			else if(player.getStatus() < 0)
				Global.mapShapes.setColor(.4f, 0f, 0f, 1f);
			else if(player.getStatus() > 0)
				Global.mapShapes.setColor(0f, .4f, 0f, 1f);
			Global.mapShapes.circle(player.getX(), player.getY() + 20, 13);
			Global.mapShapes.end();
		}		

		Entity.map.getSpriteBatch().begin();
		Global.font.draw(Entity.map.getSpriteBatch(), player.getMessage(), player.getX(), player.getY());
		if(player.getStatus() != null)
			if(Math.abs(player.getStatus()) < 10)
				Global.font.draw(Entity.map.getSpriteBatch(), ((Integer)(Math.abs(player.getStatus()))).toString(), player.getX() - 4, player.getY() + 26);
			else
				Global.font.draw(Entity.map.getSpriteBatch(), ((Integer)(Math.abs(player.getStatus()))).toString(), player.getX() - 7, player.getY() + 26);
		
		Entity.map.getSpriteBatch().end();

		update(Gdx.graphics.getDeltaTime());
	}
	
	public void update(float delta){
	}
	
	
	
	public void dispose(){
	}

}
