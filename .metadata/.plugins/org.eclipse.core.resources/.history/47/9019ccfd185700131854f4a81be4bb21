package com.peter.rogue.data;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Stack;

import com.peter.entities.NPC;
import com.peter.inventory.Chest;
import com.peter.inventory.Item;
import com.peter.packets.MPPlayer;
import com.peter.rogue.map.Tile;

public class LevelData {
    private int citizens, shopkeeps, monsters;
	public Stack<Tile[][]> tiles;
	public Stack<String[][]> visible;
	public Stack<String[][]> marker;
	public Stack<HashMap<Integer, Item>> items;
	public Stack<HashMap<Integer, Chest>> chests;
	public Stack<HashMap<Integer, NPC>> npcs;
    
	/*
		citizens = 40000;
		shopkeeps = 10000;
		monsters = 20000;
		steady 30fps
	*/
	
	public LevelData(){
		tiles = new Stack<Tile[][]>();
		visible = new Stack<String[][]>();
		marker = new Stack<String[][]>();
		items = new Stack<HashMap<Integer, Item>>();
		chests = new Stack<HashMap<Integer, Chest>>();
		npcs = new Stack<HashMap<Integer, NPC>>();
		citizens = 4;
		shopkeeps = 2;
		monsters = 2;
	}
	
	public int getCitizens() {
		return citizens;
	}
	public int getShopkeeps() {
		return shopkeeps;
	}
	public int getMonsters() {
		return monsters;
	}
	public int getNPCTotal() {
		return monsters + citizens + shopkeeps;
	}

	public void save(int WIDTH, int HEIGHT, Tile[][] tiles, String[][] visible, String[][] marker, HashMap<Integer, Item> items, HashMap<Integer, Chest> chests, HashMap<Integer, NPC> npcs){
		Tile[][] temp1 = new Tile[WIDTH][HEIGHT];
		for(int x=0; x<WIDTH; x++)
			for(int y=0; y<HEIGHT; y++)
				temp1[x][y] = tiles[x][y];
		this.tiles.push(temp1);
		
		String[][] temp2 = new String[WIDTH][HEIGHT];
		for(int x=0; x<WIDTH; x++)
			for(int y=0; y<HEIGHT; y++)
				temp2[x][y] = new String(visible[x][y]);
		this.visible.push(temp2);
		
		temp2 = new String[WIDTH][HEIGHT];
		for(int x=0; x<WIDTH; x++)
			for(int y=0; y<HEIGHT; y++)
				temp2[x][y] = new String(marker[x][y]);
		this.marker.push(temp2);

		HashMap<Integer, Item> temp3 = new HashMap<Integer, Item>();
		for(int i=0; i<items.size(); i++)
			temp3.add(items.get(i));
		this.items.push(temp3);
		
		for(HashMap item : temp3.values()){
			if(mpPlayer.canDraw)
				mpPlayer.draw(getSpriteBatch());
		}
		
		HashMap<Integer, Chest> temp4 = new ArrayList<Chest>();
		for(int i=0; i<chests.size(); i++)
			temp4.add(chests.get(i));
		this.chests.push(temp4);
		
		HashMap<Integer, NPC> temp5 = new ArrayList<NPC>();
		for(int i=0; i<npcs.size(); i++)
			temp5.add(npcs.get(i));
		this.npcs.push(temp5);
	}
}
