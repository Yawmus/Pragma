package com.peter.rogue.network;

import com.badlogic.gdx.graphics.Color;
import com.peter.inventory.Food;
import com.peter.inventory.Item;
import com.peter.inventory.Wearable;
import com.peter.map.Tile;
import com.peter.packets.ItemPacket;

public class PacketToObject{
	private static Item temp;
	
	public static Tile tileConverter(byte tile){
		switch(tile){
		case 0:
			return new Tile(Tile.BLANK);
		case 1:
			return new Tile(Tile.GROUND);
		case 2:
			return new Tile(Tile.WALL);
		case 3:
			return new Tile(Tile.DOOR);
		case 4:
			return new Tile(Tile.WATER);
		case 5:
			return new Tile(Tile.DOWN);
		case 6:
			return new Tile(Tile.UP);
		case 7:
			return new Tile(Tile.GRASS);
		}
		return null;
	}
	
	public static Item itemConverter(ItemPacket item){
		System.out.println(item.name.split("\\$")[0]);
		switch(item.name.split("\\$")[0]){
		case "Treasure":
			switch(item.name.split("\\$")[1]){
			case "Gold":
				temp = new Item(Item.GOLD);
				temp.ID = item.ID;
				return temp;
			case "Gem":
				switch(item.name.split("\\$")[2]){
				case "Diamond":
					temp = new Item(Item.GEM_DIAMOND);
					temp.setColor(Color.WHITE);
					break;
				case "Ruby":
					temp = new Item(Item.GEM_RUBY);
					temp.setColor(new Color(.79f, .17f, .17f, 1));
					break;
				case "Topaz":
					temp = new Item(Item.GEM_TOPAZ);
					temp.setColor(new Color(.26f, .4f, .96f, 1));
					break;
				case "Spessarite":
					temp = new Item(Item.GEM_SPESSARITE);
					temp.setColor(new Color(.28f, .86f, .29f, 1));
					break;
				}
				temp.ID = item.ID;
				return temp;
			}
		case "Food":
			switch(item.name.split("\\$")[1]){
			case "Bread":
				temp = new Food(Food.BREAD);
				temp.ID = item.ID;
				return temp;
			case "Meat":
				temp = new Food(Food.MEAT);
				temp.ID = item.ID;
				return temp;
			}
			
		case "Wearable":
			switch(item.name.split("\\$")[1]){
			case "Head":
				switch(item.name.split("\\$")[2]){
				case "Helmet":
					temp = new Wearable(Wearable.HELMET);
					temp.ID = item.ID;
					return temp;
				case "Hat":
					temp = new Wearable(Wearable.HAT);
					temp.ID = item.ID;
					return temp;
				}
			case "Body":
				switch(item.name.split("\\$")[2]){
				case "Breast Plate":
					temp = new Wearable(Wearable.BREAST_PLATE);
					temp.ID = item.ID;
					return temp;
				
				}
			case "Ring":
				switch(item.name.split("\\$")[2]){
				case "Wooden Ring":
					temp = new Wearable(Wearable.WOODEN_RING);
					temp.ID = item.ID;
					return temp;
				}
			case "Feet":
				switch(item.name.split("\\$")[2]){

				case "Shoes":
					temp = new Wearable(Wearable.SHOES);
					temp.ID = item.ID;
					return temp;
				}
			}
		}
		return null;
	}
}
