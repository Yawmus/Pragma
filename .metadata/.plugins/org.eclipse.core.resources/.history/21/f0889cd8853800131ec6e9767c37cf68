package com.peter.rogue.screens;

import java.io.IOException;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.maps.tiled.TiledMap;
import com.badlogic.gdx.maps.tiled.TmxMapLoader;
import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;

import com.peter.rogue.Global;
import com.peter.rogue.Rogue;
import com.peter.rogue.entities.*;

public class Play implements Screen{

	Rogue game;
	
	private OrthogonalTiledMapRenderer renderer;
	private TiledMap map;
    private EntityManager entityManager;
    
	public Play(Rogue game){
		this.game = game;
	}
	
	@Override
	public void render(float delta) {

		Gdx.gl.glClearColor(0, 0, 0, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);

		renderer.setView(Global.camera);
		renderer.render();
		renderer.getSpriteBatch().begin();
		entityManager.draw(renderer);
		renderer.getSpriteBatch().end();
	}

	@Override
	public void resize(int width, int height) {
		Global.camera.viewportWidth = width;
		Global.camera.viewportHeight = height;
	}
	
	@Override
	public void show() {
		map = new TmxMapLoader().load("maps/map.tmx");
		renderer = new OrthogonalTiledMapRenderer(map);
		Global.camera = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		
		try{
			entityManager = new EntityManager();
		}
		catch(IOException e){};
		
		entityManager.init(map);
	}

	@Override
	public void hide() {
	}

	@Override
	public void pause() {
	}

	@Override
	public void resume() {
	}

	@Override
	public void dispose() {
		map.dispose();
		renderer.dispose();
		entityManager.dispose();
	}

}
